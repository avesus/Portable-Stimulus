/****************************************************************************
 *                          infact_RxTx_seq.rules
 ****************************************************************************/

rule_graph infact_RxTx_seq {
    action init, infact_checkcov;

	set stop_e[signed enum TWO_STOP_BITS, ONE_STOP_BIT];
	set kind_e[signed enum RECEIVE, TRANSMIT];

    struct uart_transaction {
		meta_action payload [unsigned 7:0];
		meta_action start_bit [unsigned 0:0];
		meta_action stop_bits [unsigned 1:0];
		meta_action delay [signed 31:0];
		meta_action kind <kind_e>[kind_e];
		meta_action stop_type <stop_e>[stop_e];

		constraint c_delay{
			delay < 20;
			delay >= 1;
		}
		constraint c_start_bit{
			start_bit == 1'b0;
		}
		constraint c_stop_bit{
			stop_bits == 2'h3;
		}
		constraint c_stop_bits_t{
			stop_type == ONE_STOP_BIT;
		}

		bins payload [0] [1] [2] [3..252]/4 [253] [254] [255];
    }
    
    uart_transaction uart_transaction_inst;
    
    interface do_item(uart_transaction);
    
    infact_RxTx_seq = init repeat {
        do_item(uart_transaction_inst)
        infact_checkcov
    };
}
